{
  "questions": [
    {
      "id": 1,
      "topic": "Node.js",
      "question": "What is Node.js?",
      "options": [
        "A front-end framework",
        "A JavaScript runtime built on Chrome's V8 JavaScript engine",
        "A database management system",
        "A CSS preprocessor"
      ],
      "correctAnswer": "A JavaScript runtime built on Chrome's V8 JavaScript engine"
    },
    {
      "id": 2,
      "topic": "Node.js",
      "question": "Who created Node.js?",
      "options": [
        "Brendan Eich",
        "Douglas Crockford",
        "Ryan Dahl",
        "Tim Berners-Lee"
      ],
      "correctAnswer": "Ryan Dahl"
    },
    {
      "id": 3,
      "topic": "Node.js",
      "question": "Which of the following is a core module in Node.js?",
      "options": [
        "http",
        "express",
        "mongoose",
        "lodash"
      ],
      "correctAnswer": "http"
    },
    {
      "id": 4,
      "topic": "Node.js",
      "question": "How do you import a module in Node.js?",
      "options": [
        "import module from 'module';",
        "include('module');",
        "const module = require('module');",
        "module.import('module');"
      ],
      "correctAnswer": "const module = require('module');"
    },
    {
      "id": 5,
      "topic": "Node.js",
      "question": "What command is used to initialize a new Node.js project?",
      "options": [
        "npm install",
        "npm start",
        "npm run init",
        "npm init"
      ],
      "correctAnswer": "npm init"
    },
    {
      "id": 6,
      "topic": "Node.js",
      "question": "Which of the following is true about the package.json file?",
      "options": [
        "It contains the source code of the project.",
        "It contains metadata about the project and its dependencies.",
        "It contains the compiled output of the project.",
        "It is only used for front-end projects."
      ],
      "correctAnswer": "It contains metadata about the project and its dependencies."
    },
    {
      "id": 7,
      "topic": "Node.js",
      "question": "How do you install a package globally using npm?",
      "options": [
        "npm install package",
        "npm install -g package",
        "npm install package --save",
        "npm install package --global"
      ],
      "correctAnswer": "npm install -g package"
    },
    {
      "id": 8,
      "topic": "Node.js",
      "question": "Which module is used to create a web server in Node.js?",
      "options": [
        "fs",
        "path",
        "http",
        "os"
      ],
      "correctAnswer": "http"
    },
    {
      "id": 9,
      "topic": "Node.js",
      "question": "What is the default port number for a Node.js application?",
      "options": [
        "3000",
        "8080",
        "80",
        "5000"
      ],
      "correctAnswer": "8080"
    },
    {
      "id": 10,
      "topic": "Node.js",
      "question": "What does the fs module in Node.js stand for?",
      "options": [
        "File Source",
        "File System",
        "File Service",
        "File Stream"
      ],
      "correctAnswer": "File System"
    },
    {
      "id": 11,
      "topic": "Node.js",
      "question": "How do you read a file asynchronously in Node.js?",
      "options": [
        "fs.readFileSync('file.txt', callback);",
        "fs.readFile('file.txt', callback);",
        "fs.open('file.txt', 'r', callback);",
        "fs.read('file.txt', callback);"
      ],
      "correctAnswer": "fs.readFile('file.txt', callback);"
    },
    {
      "id": 12,
      "topic": "Node.js",
      "question": "Which method is used to create a new directory in Node.js?",
      "options": [
        "fs.writeDir",
        "fs.mkdir",
        "fs.createDir",
        "fs.newDir"
      ],
      "correctAnswer": "fs.mkdir"
    },
    {
      "id": 13,
      "topic": "Node.js",
      "question": "How do you handle exceptions in Node.js?",
      "options": [
        "Using try-catch blocks",
        "Using event emitters",
        "Using process.on('uncaughtException')",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 14,
      "topic": "Node.js",
      "question": "What is npm?",
      "options": [
        "A Node.js framework",
        "A JavaScript library",
        "A package manager for Node.js",
        "A Node.js module"
      ],
      "correctAnswer": "A package manager for Node.js"
    },
    {
      "id": 15,
      "topic": "Node.js",
      "question": "What does the nodemon tool do?",
      "options": [
        "Compiles Node.js code",
        "Optimizes Node.js code",
        "Automatically restarts the Node.js application when file changes are detected",
        "Debugs Node.js code"
      ],
      "correctAnswer": "Automatically restarts the Node.js application when file changes are detected"
    },
    {
      "id": 16,
      "topic": "Node.js",
      "question": "How can you export a function from a module in Node.js?",
      "options": [
        "export function myFunction() {}",
        "module.exports = { myFunction };",
        "module.exports.myFunction = myFunction;",
        "exports: myFunction;"
      ],
      "correctAnswer": "module.exports.myFunction = myFunction;"
    },
    {
      "id": 17,
      "topic": "Node.js",
      "question": "What is the purpose of the __dirname variable in Node.js?",
      "options": [
        "To get the name of the current module",
        "To get the absolute path of the current file",
        "To get the directory name of the current module",
        "To get the environment variables"
      ],
      "correctAnswer": "To get the directory name of the current module"
    },
    {
      "id": 18,
      "topic": "Node.js",
      "question": "Which method is used to parse a JSON string in Node.js?",
      "options": [
        "JSON.parse()",
        "JSON.stringify()",
        "JSON.toObject()",
        "JSON.decode()"
      ],
      "correctAnswer": "JSON.parse()"
    },
    {
      "id": 19,
      "topic": "Node.js",
      "question": "How do you create a new instance of an EventEmitter in Node.js?",
      "options": [
        "const emitter = new events.EventEmitter();",
        "const EventEmitter = require('events'); const emitter = new EventEmitter();",
        "const emitter = events();",
        "const EventEmitter = require('event'); const emitter = new EventEmitter();"
      ],
      "correctAnswer": "const EventEmitter = require('events'); const emitter = new EventEmitter();"
    },
    {
      "id": 20,
      "topic": "Node.js",
      "question": "Which of the following is used to manage dependencies in Node.js?",
      "options": [
        "npm",
        "yarn",
        "package.json",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 21,
      "topic": "Node.js",
      "question": "What does the method process.exit() do in Node.js?",
      "options": [
        "Restarts the Node.js process",
        "Pauses the Node.js process",
        "Exits the Node.js process",
        "Logs the current process status"
      ],
      "correctAnswer": "Exits the Node.js process"
    },
    {
      "id": 22,
      "topic": "Node.js",
      "question": "How do you listen for an event in Node.js?",
      "options": [
        "emitter.listen('event', callback);",
        "emitter.receive('event', callback);",
        "emitter.catch('event', callback);",
        "emitter.on('event', callback);"
      ],
      "correctAnswer": "emitter.on('event', callback);"
    },
    {
      "id": 23,
      "topic": "Node.js",
      "question": "What is a middleware in the context of Node.js?",
      "options": [
        "A core module",
        "A function that has access to the request and response objects",
        "A method to handle exceptions",
        "A type of event emitter"
      ],
      "correctAnswer": "A function that has access to the request and response objects"
    },
    {
      "id": 24,
      "topic": "Node.js",
      "question": "What is the purpose of the buffer class in Node.js?",
      "options": [
        "To handle file streams",
        "To manage database connections",
        "To handle binary data",
        "To parse JSON data"
      ],
      "correctAnswer": "To handle binary data"
    },
    {
      "id": 25,
      "topic": "Node.js",
      "question": "Which method is used to write data to a file in Node.js?",
      "options": [
        "fs.read",
        "fs.append",
        "fs.write",
        "fs.writeFile"
      ],
      "correctAnswer": "fs.writeFile"
    },
    {
      "id": 26,
      "topic": "Node.js",
      "question": "What is Express.js?",
      "options": [
        "A database for Node.js",
        "A module loader for Node.js",
        "A web application framework for Node.js",
        "A logging library for Node.js"
      ],
      "correctAnswer": "A web application framework for Node.js"
    },
    {
      "id": 27,
      "topic": "Node.js",
      "question": "Which module is used to handle file uploads in Node.js?",
      "options": [
        "express",
        "multer",
        "formidable",
        "Both b and c"
      ],
      "correctAnswer": "Both b and c"
    },
    {
      "id": 28,
      "topic": "Node.js",
      "question": "How do you handle asynchronous operations in Node.js?",
      "options": [
        "Using synchronous methods",
        "Using event emitters",
        "Using callbacks, promises, or async/await",
        "Using process.nextTick"
      ],
      "correctAnswer": "Using callbacks, promises, or async/await"
    },
    {
      "id": 29,
      "topic": "Node.js",
      "question": "What does the path module provide in Node.js?",
      "options": [
        "Methods to interact with the file system",
        "Methods to handle HTTP requests",
        "Methods to work with file and directory paths",
        "Methods to manage processes"
      ],
      "correctAnswer": "Methods to work with file and directory paths"
    },
    {
      "id": 30,
      "topic": "Node.js",
      "question": "Which core module in Node.js provides a way to work with streams?",
      "options": [
        "stream",
        "path",
        "fs",
        "events"
      ],
      "correctAnswer": "stream"
    },
    {
      "id": 31,
      "topic": "Node.js",
      "question": "How do you create a new directory asynchronously in Node.js?",
      "options": [
        "fs.writeDir",
        "fs.mkdirSync",
        "fs.mkdir",
        "fs.createDir"
      ],
      "correctAnswer": "fs.mkdir"
    },
    {
      "id": 32,
      "topic": "Node.js",
      "question": "Which method is used to register a callback to be executed when the process exits?",
      "options": [
        "process.on('exit', callback);",
        "process.exit(callback);",
        "process.on('beforeExit', callback);",
        "process.beforeExit(callback);"
      ],
      "correctAnswer": "process.on('beforeExit', callback);"
    },
    {
      "id": 33,
      "topic": "Node.js",
      "question": "How do you install a specific version of a package using npm?",
      "options": [
        "npm install package",
        "npm install package@version",
        "npm install package --version",
        "npm install package --specific"
      ],
      "correctAnswer": "npm install package@version"
    },
    {
      "id": 34,
      "topic": "Node.js",
      "question": "What is the purpose of the child_process module in Node.js?",
      "options": [
        "To spawn child processes",
        "To handle HTTP requests",
        "To manage file streams",
        "To interact with the database"
      ],
      "correctAnswer": "To spawn child processes"
    },
    {
      "id": 35,
      "topic": "Node.js",
      "question": "How do you convert a callback-based function to a promise-based one in Node.js?",
      "options": [
        "Using async/await",
        "Using a middleware",
        "Using the util.promisify method",
        "Using process.nextTick"
      ],
      "correctAnswer": "Using the util.promisify method"
    },
    {
      "id": 36,
      "topic": "Node.js",
      "question": "What is the default scope of npm packages?",
      "options": [
        "Global",
        "Local",
        "System",
        "Network"
      ],
      "correctAnswer": "Local"
    },
    {
      "id": 37,
      "topic": "Node.js",
      "question": "How can you execute a shell command from within a Node.js script?",
      "options": [
        "Using the child_process.exec method",
        "Using the process.shell method",
        "Using the os.exec method",
        "Using the fs.exec method"
      ],
      "correctAnswer": "Using the child_process.exec method"
    },
    {
      "id": 38,
      "topic": "Node.js",
      "question": "How do you create a simple HTTP server in Node.js?",
      "options": [
        "Using the fs module",
        "Using the http module",
        "Using the express module",
        "Using the url module"
      ],
      "correctAnswer": "Using the http module"
    },
    {
      "id": 39,
      "topic": "Node.js",
      "question": "What is the purpose of the crypto module in Node.js?",
      "options": [
        "To manage databases",
        "To handle file operations",
        "To provide cryptographic functionalities",
        "To manage HTTP requests"
      ],
      "correctAnswer": "To provide cryptographic functionalities"
    },
    {
      "id": 40,
      "topic": "Node.js",
      "question": "How do you start a Node.js application?",
      "options": [
        "node run app.js",
        "npm start app.js",
        "nodejs app.js",
        "node app.js"
      ],
      "correctAnswer": "node app.js"
    },
    {
      "id": 41,
      "topic": "React",
      "question": "What is React primarily used for?",
      "options": [
        "Server-side rendering",
        "Building user interfaces",
        "Database management",
        "Mobile app development"
      ],
      "correctAnswer": "Building user interfaces"
    },
    {
      "id": 42,
      "topic": "React",
      "question": "Who developed React?",
      "options": [
        "Facebook",
        "Google",
        "Microsoft",
        "Apple"
      ],
      "correctAnswer": "Facebook"
    },
    {
      "id": 43,
      "topic": "React",
      "question": "What is a React component?",
      "options": [
        "A function that performs calculations",
        "A CSS file for styling",
        "A reusable piece of UI",
        "A database query"
      ],
      "correctAnswer": "A reusable piece of UI"
    },
    {
      "id": 44,
      "topic": "React",
      "question": "Which of the following is a correct way to create a component in React?",
      "options": [
        "function MyComponent { return <div></div>; }",
        "component MyComponent() { return <div></div>; }",
        "function MyComponent() { return <div></div>; }",
        "MyComponent() => { return <div></div>; }"
      ],
      "correctAnswer": "function MyComponent() { return <div></div>; }"
    },
    {
      "id": 45,
      "topic": "React",
      "question": "What is JSX?",
      "options": [
        "A type of JavaScript",
        "A syntax extension for JavaScript",
        "A database query language",
        "A CSS preprocessor"
      ],
      "correctAnswer": "A syntax extension for JavaScript"
    },
    {
      "id": 46,
      "topic": "React",
      "question": "How do you pass data to a child component in React?",
      "options": [
        "Using state",
        "Using setState",
        "Using props",
        "Using context"
      ],
      "correctAnswer": "Using props"
    },
    {
      "id": 47,
      "topic": "React",
      "question": "What is the virtual DOM in React?",
      "options": [
        "A lightweight representation of the real DOM",
        "A server-side rendering engine",
        "A database management system",
        "A styling framework"
      ],
      "correctAnswer": "A lightweight representation of the real DOM"
    },
    {
      "id": 48,
      "topic": "React",
      "question": "How do you create a stateful component in React?",
      "options": [
        "Using CSS",
        "Using the useState hook",
        "Using props",
        "Using HTML"
      ],
      "correctAnswer": "Using the useState hook"
    },
    {
      "id": 49,
      "topic": "React",
      "question": "What is a key in React used for?",
      "options": [
        "To uniquely identify elements in a list",
        "To style components",
        "To perform API calls",
        "To manage state"
      ],
      "correctAnswer": "To uniquely identify elements in a list"
    },
    {
      "id": 50,
      "topic": "React",
      "question": "Which hook is used for side effects in functional components?",
      "options": [
        "useState",
        "useEffect",
        "useContext",
        "useReducer"
      ],
      "correctAnswer": "useEffect"
    },
    {
      "id": 51,
      "topic": "React",
      "question": "How can you handle events in React?",
      "options": [
        "Using addEventListener",
        "Using jQuery",
        "Using event handlers like onClick",
        "Using event bubbling"
      ],
      "correctAnswer": "Using event handlers like onClick"
    },
    {
      "id": 52,
      "topic": "React",
      "question": "What does the setState method do in class components?",
      "options": [
        "Renders the component",
        "Sets the initial state",
        "Updates the component's state",
        "Deletes the component"
      ],
      "correctAnswer": "Updates the component's state"
    },
    {
      "id": 53,
      "topic": "React",
      "question": "What is a higher-order component (HOC) in React?",
      "options": [
        "A component with higher state",
        "A built-in React component",
        "A function that takes a component and returns a new component",
        "A method for making API calls"
      ],
      "correctAnswer": "A function that takes a component and returns a new component"
    },
    {
      "id": 54,
      "topic": "React",
      "question": "What is the purpose of the useContext hook?",
      "options": [
        "To manage state",
        "To access context values",
        "To perform side effects",
        "To handle events"
      ],
      "correctAnswer": "To access context values"
    },
    {
      "id": 55,
      "topic": "React",
      "question": "How can you optimize performance in a React app?",
      "options": [
        "By adding more components",
        "By using memoization techniques",
        "By increasing the bundle size",
        "By avoiding JSX"
      ],
      "correctAnswer": "By using memoization techniques"
    },
    {
      "id": 56,
      "topic": "React",
      "question": "What is React Router used for?",
      "options": [
        "Managing state",
        "Handling navigation and routing",
        "Styling components",
        "Performing API calls"
      ],
      "correctAnswer": "Handling navigation and routing"
    },
    {
      "id": 57,
      "topic": "React",
      "question": "Which hook would you use to manage a complex state logic in a functional component?",
      "options": [
        "useState",
        "useReducer",
        "useEffect",
        "useRef"
      ],
      "correctAnswer": "useReducer"
    },
    {
      "id": 58,
      "topic": "React",
      "question": "What does the React.Fragment component do?",
      "options": [
        "Styles elements",
        "Renders to the server",
        "Groups multiple elements without adding extra nodes to the DOM",
        "Performs API calls"
      ],
      "correctAnswer": "Groups multiple elements without adding extra nodes to the DOM"
    },
    {
      "id": 59,
      "topic": "React",
      "question": "How can you conditionally render a component in React?",
      "options": [
        "Using JavaScript conditional operators (e.g. ternary operator)",
        "Using CSS classes",
        "Using HTML attributes",
        "Using SQL queries"
      ],
      "correctAnswer": "Using JavaScript conditional operators (e.g. ternary operator)"
    },
    {
      "id": 60,
      "topic": "React",
      "question": "What does the useRef hook provide in React?",
      "options": [
        "State management",
        "Event handling",
        "Side effects",
        "Access to DOM nodes or component instances"
      ],
      "correctAnswer": "Access to DOM nodes or component instances"
    },
    {
      "id": 61,
      "topic": "React",
      "question": "How do you perform side effects in a class component?",
      "options": [
        "Using useEffect",
        "Using componentDidUpdate",
        "Using useContext",
        "Using componentDidMount and componentDidUpdate"
      ],
      "correctAnswer": "Using componentDidMount and componentDidUpdate"
    },
    {
      "id": 62,
      "topic": "React",
      "question": "What is the purpose of the shouldComponentUpdate lifecycle method?",
      "options": [
        "To optimize performance by preventing unnecessary re-renders",
        "To manage state",
        "To handle events",
        "To fetch data"
      ],
      "correctAnswer": "To optimize performance by preventing unnecessary re-renders"
    },
    {
      "id": 63,
      "topic": "React",
      "question": "What is the default value of a context in React?",
      "options": [
        "Undefined",
        "The value provided when creating the context",
        "Null",
        "An empty object"
      ],
      "correctAnswer": "The value provided when creating the context"
    },
    {
      "id": 64,
      "topic": "React",
      "question": "Which method is used to update the state in a functional component?",
      "options": [
        "this.setState",
        "useReducer",
        "setState (from useState)",
        "setContext"
      ],
      "correctAnswer": "setState (from useState)"
    },
    {
      "id": 65,
      "topic": "React",
      "question": "How do you import a component from another file in React?",
      "options": [
        "require('./Component')",
        "import Component from './Component';",
        "import { Component } from './Component';",
        "include('./Component')"
      ],
      "correctAnswer": "import { Component } from './Component';"
    },
    {
      "id": 66,
      "topic": "React",
      "question": "What is the main benefit of using React hooks?",
      "options": [
        "Better styling",
        "Easier state management in class components",
        "Managing state and side effects in functional components",
        "Improved performance"
      ],
      "correctAnswer": "Managing state and side effects in functional components"
    },
    {
      "id": 67,
      "topic": "React",
      "question": "How do you access props in a functional component?",
      "options": [
        "this.props",
        "Using the function parameter",
        "Using useProps",
        "Using props()"
      ],
      "correctAnswer": "Using the function parameter"
    },
    {
      "id": 68,
      "topic": "React",
      "question": "What are PropTypes used for in React?",
      "options": [
        "Managing state",
        "Styling components",
        "Type-checking props",
        "Handling events"
      ],
      "correctAnswer": "Type-checking props"
    },
    {
      "id": 69,
      "topic": "React",
      "question": "How do you create a context in React?",
      "options": [
        "React.createContext()",
        "const MyContext = React.createContext()",
        "new React.Context()",
        "const MyContext = new Context()"
      ],
      "correctAnswer": "const MyContext = React.createContext()"
    },
    {
      "id": 70,
      "topic": "React",
      "question": "What is the use of ReactDOM.render?",
      "options": [
        "To create a virtual DOM",
        "To update state",
        "To render a React component to the DOM",
        "To manage props"
      ],
      "correctAnswer": "To render a React component to the DOM"
    },
    {
      "id": 71,
      "topic": "React",
      "question": "How do you handle form submission in React?",
      "options": [
        "Using onSubmit in the form element",
        "Using onChange in the form element",
        "Using onClick in the button element",
        "Using an event handler with onSubmit in the form element"
      ],
      "correctAnswer": "Using an event handler with onSubmit in the form element"
    },
    {
      "id": 72,
      "topic": "React",
      "question": "What is the purpose of componentWillUnmount?",
      "options": [
        "To perform cleanup operations before the component is removed from the DOM",
        "To fetch data",
        "To render the component",
        "To update the state"
      ],
      "correctAnswer": "To perform cleanup operations before the component is removed from the DOM"
    },
    {
      "id": 73,
      "topic": "React",
      "question": "What does lifting state up mean in React?",
      "options": [
        "Moving state to a higher-level component to share it between components",
        "Passing state down via props",
        "Storing state in the context",
        "Moving state to the Redux store"
      ],
      "correctAnswer": "Moving state to a higher-level component to share it between components"
    },
    {
      "id": 74,
      "topic": "React",
      "question": "What is a controlled component in React?",
      "options": [
        "A component where form data is handled by the state",
        "A component where form data is handled by the DOM",
        "A component that manages its own state",
        "A component that uses context"
      ],
      "correctAnswer": "A component where form data is handled by the state"
    },
    {
      "id": 75,
      "topic": "React",
      "question": "How do you create a memoized component in React?",
      "options": [
        "Using React.memoize",
        "Using React.useMemo",
        "Using React.memo",
        "Using React.useCallback"
      ],
      "correctAnswer": "Using React.memo"
    },
    {
      "id": 76,
      "topic": "React",
      "question": "What does the useMemo hook do?",
      "options": [
        "Manages state",
        "Handles side effects",
        "Memoizes a computed value to optimize performance",
        "Fetches data"
      ],
      "correctAnswer": "Memoizes a computed value to optimize performance"
    },
    {
      "id": 77,
      "topic": "React",
      "question": "Which lifecycle method is invoked immediately after a component is updated?",
      "options": [
        "componentWillUpdate",
        "componentWillMount",
        "componentDidMount",
        "componentDidUpdate"
      ],
      "correctAnswer": "componentDidUpdate"
    },
    {
      "id": 78,
      "topic": "React",
      "question": "How do you handle errors in a React component?",
      "options": [
        "Using try-catch in render method",
        "Using Error Boundaries",
        "Using error state",
        "Using componentDidCatch only"
      ],
      "correctAnswer": "Using Error Boundaries"
    },
    {
      "id": 79,
      "topic": "React",
      "question": "What is the primary purpose of keys in React lists?",
      "options": [
        "To style list items",
        "To help React identify which items have changed, are added, or are removed",
        "To manage state in list items",
        "To fetch data for list items"
      ],
      "correctAnswer": "To help React identify which items have changed, are added, or are removed"
    },
    {
      "id": 80,
      "topic": "React",
      "question": "Which hook should you use to perform data fetching in a functional component?",
      "options": [
        "useState",
        "useReducer",
        "useEffect",
        "useRef"
      ],
      "correctAnswer": "useEffect"
    },
    {
      "id": 81,
      "topic": "JavaScript",
      "question": "What is JavaScript?",
      "options": [
        "A programming language",
        "A database",
        "A browser",
        "An operating system"
      ],
      "correctAnswer": "A programming language"
    },
    {
      "id": 82,
      "topic": "JavaScript",
      "question": "Which company developed JavaScript?",
      "options": [
        "Microsoft",
        "Netscape",
        "Google",
        "IBM"
      ],
      "correctAnswer": "Netscape"
    },
    {
      "id": 83,
      "topic": "JavaScript",
      "question": "Which of the following is not a JavaScript data type?",
      "options": [
        "Undefined",
        "Number",
        "Boolean",
        "Float"
      ],
      "correctAnswer": "Float"
    },
    {
      "id": 84,
      "topic": "JavaScript",
      "question": "Which symbol is used for comments in JavaScript?",
      "options": [
        "//",
        "/* */",
        "#",
        "<!-- -->"
      ],
      "correctAnswer": "//"
    },
    {
      "id": 85,
      "topic": "JavaScript",
      "question": "Which method is used to create a new array by merging existing arrays in JavaScript?",
      "options": [
        "concat()",
        "merge()",
        "join()",
        "slice()"
      ],
      "correctAnswer": "concat()"
    },
    {
      "id": 86,
      "topic": "JavaScript",
      "question": "What does the isNaN() function do?",
      "options": [
        "Checks if a value is a number",
        "Checks if a value is an integer",
        "Checks if a value is NaN",
        "Checks if a value is undefined"
      ],
      "correctAnswer": "Checks if a value is NaN"
    },
    {
      "id": 87,
      "topic": "JavaScript",
      "question": "Which of the following is used to define a variable in JavaScript?",
      "options": [
        "var",
        "let",
        "const",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 88,
      "topic": "JavaScript",
      "question": "How do you write a function in JavaScript?",
      "options": [
        "function myFunction()",
        "def myFunction()",
        "func myFunction()",
        "function:myFunction()"
      ],
      "correctAnswer": "function myFunction()"
    },
    {
      "id": 89,
      "topic": "JavaScript",
      "question": "How do you call a function named 'myFunction' in JavaScript?",
      "options": [
        "call myFunction()",
        "call function myFunction()",
        "myFunction()",
        "Call.myFunction()"
      ],
      "correctAnswer": "myFunction()"
    },
    {
      "id": 90,
      "topic": "JavaScript",
      "question": "How do you write an 'if' statement in JavaScript?",
      "options": [
        "if i == 5 then",
        "if (i == 5)",
        "if i = 5",
        "if i == 5"
      ],
      "correctAnswer": "if (i == 5)"
    },
    {
      "id": 91,
      "topic": "JavaScript",
      "question": "Which event occurs when the user clicks on an HTML element?",
      "options": [
        "onchange",
        "onclick",
        "onmouseover",
        "onmouseclick"
      ],
      "correctAnswer": "onclick"
    },
    {
      "id": 92,
      "topic": "JavaScript",
      "question": "Which operator is used to assign a value to a variable?",
      "options": [
        "*",
        "-",
        "=",
        "+"
      ],
      "correctAnswer": "="
    },
    {
      "id": 93,
      "topic": "JavaScript",
      "question": "What will the following code return: Boolean(10 > 9)?",
      "options": [
        "true",
        "false",
        "NaN",
        "undefined"
      ],
      "correctAnswer": "true"
    },
    {
      "id": 94,
      "topic": "JavaScript",
      "question": "Which method converts JSON data to a JavaScript object?",
      "options": [
        "JSON.parse()",
        "JSON.stringify()",
        "JSON.convert()",
        "JSON.toObject()"
      ],
      "correctAnswer": "JSON.parse()"
    },
    {
      "id": 95,
      "topic": "JavaScript",
      "question": "Which method converts a JavaScript object to JSON data?",
      "options": [
        "JSON.parse()",
        "JSON.stringify()",
        "JSON.convert()",
        "JSON.toJSON()"
      ],
      "correctAnswer": "JSON.stringify()"
    },
    {
      "id": 96,
      "topic": "JavaScript",
      "question": "How do you add a comment in JavaScript?",
      "options": [
        "// This is a comment",
        "<!-- This is a comment -->",
        "# This is a comment",
        "/* This is a comment */"
      ],
      "correctAnswer": "// This is a comment"
    },
    {
      "id": 97,
      "topic": "JavaScript",
      "question": "Which method is used to find the length of a string in JavaScript?",
      "options": [
        "length()",
        "size()",
        "len()",
        "length"
      ],
      "correctAnswer": "length"
    },
    {
      "id": 98,
      "topic": "JavaScript",
      "question": "Which of the following is not a reserved word in JavaScript?",
      "options": [
        "interface",
        "throws",
        "program",
        "short"
      ],
      "correctAnswer": "program"
    },
    {
      "id": 99,
      "topic": "JavaScript",
      "question": "What is the output of the following code: console.log(typeof []);",
      "options": [
        "object",
        "array",
        "null",
        "undefined"
      ],
      "correctAnswer": "object"
    },
    {
      "id": 100,
      "topic": "JavaScript",
      "question": "Which of the following methods can be used to create a new array from an existing array?",
      "options": [
        "map()",
        "filter()",
        "reduce()",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 101,
      "topic": "JavaScript",
      "question": "What is the correct syntax for referring to an external script called 'script.js'?",
      "options": [
        "<script href='script.js'>",
        "<script name='script.js'>",
        "<script src='script.js'>",
        "<script link='script.js'>"
      ],
      "correctAnswer": "<script src='script.js'>"
    },
    {
      "id": 102,
      "topic": "JavaScript",
      "question": "Which method is used to remove the last element from an array and return that element?",
      "options": [
        "pop()",
        "push()",
        "shift()",
        "unshift()"
      ],
      "correctAnswer": "pop()"
    },
    {
      "id": 103,
      "topic": "JavaScript",
      "question": "Which method is used to add one or more elements to the end of an array and return the new length of the array?",
      "options": [
        "pop()",
        "push()",
        "shift()",
        "unshift()"
      ],
      "correctAnswer": "push()"
    },
    {
      "id": 104,
      "topic": "JavaScript",
      "question": "Which method is used to remove the first element from an array and return that element?",
      "options": [
        "pop()",
        "push()",
        "shift()",
        "unshift()"
      ],
      "correctAnswer": "shift()"
    },
    {
      "id": 105,
      "topic": "JavaScript",
      "question": "Which method is used to add one or more elements to the beginning of an array and return the new length of the array?",
      "options": [
        "pop()",
        "push()",
        "shift()",
        "unshift()"
      ],
      "correctAnswer": "unshift()"
    },
    {
      "id": 106,
      "topic": "JavaScript",
      "question": "How do you declare a JavaScript variable?",
      "options": [
        "variable carName;",
        "var carName;",
        "v carName;",
        "declare carName;"
      ],
      "correctAnswer": "var carName;"
    },
    {
      "id": 107,
      "topic": "JavaScript",
      "question": "Which method is used to combine the text of two strings and return a new string?",
      "options": [
        "add()",
        "merge()",
        "concat()",
        "append()"
      ],
      "correctAnswer": "concat()"
    },
    {
      "id": 108,
      "topic": "JavaScript",
      "question": "Which of the following is a looping structure in JavaScript?",
      "options": [
        "for",
        "while",
        "do-while",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 109,
      "topic": "JavaScript",
      "question": "What is the output of the following code: console.log(typeof null);",
      "options": [
        "object",
        "null",
        "undefined",
        "function"
      ],
      "correctAnswer": "object"
    },
    {
      "id": 110,
      "topic": "JavaScript",
      "question": "Which of the following is not a JavaScript framework?",
      "options": [
        "Angular",
        "Vue",
        "React",
        "Django"
      ],
      "correctAnswer": "Django"
    },
    {
      "id": 111,
      "topic": "JavaScript",
      "question": "What will the following code output? console.log('5' + 3);",
      "options": [
        "8",
        "53",
        "Error",
        "Undefined"
      ],
      "correctAnswer": "53"
    },
    {
      "id": 112,
      "topic": "JavaScript",
      "question": "What is the purpose of the 'this' keyword in JavaScript?",
      "options": [
        "It refers to the current object",
        "It refers to the previous object",
        "It refers to the global object",
        "It refers to the function"
      ],
      "correctAnswer": "It refers to the current object"
    },
    {
      "id": 113,
      "topic": "JavaScript",
      "question": "Which method can be used to convert a string to an integer in JavaScript?",
      "options": [
        "parseInt()",
        "parseFloat()",
        "Number()",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 114,
      "topic": "JavaScript",
      "question": "What is the purpose of the 'use strict' directive in JavaScript?",
      "options": [
        "To enable strict mode in JavaScript",
        "To disable strict mode in JavaScript",
        "To enable debugging",
        "To disable debugging"
      ],
      "correctAnswer": "To enable strict mode in JavaScript"
    },
    {
      "id": 115,
      "topic": "JavaScript",
      "question": "What is the output of the following code: console.log(typeof NaN);",
      "options": [
        "number",
        "NaN",
        "undefined",
        "object"
      ],
      "correctAnswer": "number"
    },
    {
      "id": 116,
      "topic": "JavaScript",
      "question": "Which method can be used to round a number to the nearest integer?",
      "options": [
        "Math.round()",
        "Math.ceil()",
        "Math.floor()",
        "Math.trunc()"
      ],
      "correctAnswer": "Math.round()"
    },
    {
      "id": 117,
      "topic": "JavaScript",
      "question": "Which of the following methods can be used to create a new array from a subset of an existing array?",
      "options": [
        "slice()",
        "splice()",
        "concat()",
        "map()"
      ],
      "correctAnswer": "slice()"
    },
    {
      "id": 118,
      "topic": "JavaScript",
      "question": "Which of the following methods can be used to remove elements from an array and optionally replace them?",
      "options": [
        "slice()",
        "splice()",
        "concat()",
        "map()"
      ],
      "correctAnswer": "splice()"
    },
    {
      "id": 119,
      "topic": "JavaScript",
      "question": "What will the following code output? console.log(0.1 + 0.2 === 0.3);",
      "options": [
        "true",
        "false",
        "undefined",
        "NaN"
      ],
      "correctAnswer": "false"
    },
    {
      "id": 120,
      "topic": "JavaScript",
      "question": "Which of the following is not a JavaScript type conversion method?",
      "options": [
        "toString()",
        "toLocaleString()",
        "toDateString()",
        "toArrayString()"
      ],
      "correctAnswer": "toArrayString()"
    },
    {
      "id": 121,
      "topic": "SQL",
      "question": "What does SQL stand for?",
      "options": [
        "Structured Query Language",
        "Standard Query Language",
        "Simple Query Language",
        "Sorted Query Language"
      ],
      "correctAnswer": "Structured Query Language"
    },
    {
      "id": 122,
      "topic": "SQL",
      "question": "Which SQL statement is used to extract data from a database?",
      "options": [
        "GET",
        "SELECT",
        "EXTRACT",
        "OPEN"
      ],
      "correctAnswer": "SELECT"
    },
    {
      "id": 123,
      "topic": "SQL",
      "question": "Which SQL statement is used to update data in a database?",
      "options": [
        "SAVE",
        "UPDATE",
        "MODIFY",
        "CHANGE"
      ],
      "correctAnswer": "UPDATE"
    },
    {
      "id": 124,
      "topic": "SQL",
      "question": "Which SQL statement is used to delete data from a database?",
      "options": [
        "REMOVE",
        "DELETE",
        "DROP",
        "CANCEL"
      ],
      "correctAnswer": "DELETE"
    },
    {
      "id": 125,
      "topic": "SQL",
      "question": "Which SQL statement is used to insert new data into a database?",
      "options": [
        "INSERT INTO",
        "ADD NEW",
        "ADD RECORD",
        "INSERT NEW"
      ],
      "correctAnswer": "INSERT INTO"
    },
    {
      "id": 126,
      "topic": "SQL",
      "question": "What is a primary key?",
      "options": [
        "A unique identifier for a record",
        "A reference to another table",
        "A command to create a new table",
        "A function to summarize data"
      ],
      "correctAnswer": "A unique identifier for a record"
    },
    {
      "id": 127,
      "topic": "SQL",
      "question": "What is a foreign key?",
      "options": [
        "A unique identifier for a record",
        "A reference to another table",
        "A command to create a new table",
        "A function to summarize data"
      ],
      "correctAnswer": "A reference to another table"
    },
    {
      "id": 128,
      "topic": "SQL",
      "question": "Which SQL statement is used to create a new table?",
      "options": [
        "CREATE TABLE",
        "MAKE TABLE",
        "ADD TABLE",
        "NEW TABLE"
      ],
      "correctAnswer": "CREATE TABLE"
    },
    {
      "id": 129,
      "topic": "SQL",
      "question": "Which SQL clause is used to specify the condition for selecting records?",
      "options": [
        "WHERE",
        "IF",
        "CONDITION",
        "CASE"
      ],
      "correctAnswer": "WHERE"
    },
    {
      "id": 130,
      "topic": "SQL",
      "question": "Which SQL keyword is used to sort the result set?",
      "options": [
        "SORT BY",
        "ORDER BY",
        "GROUP BY",
        "RANK BY"
      ],
      "correctAnswer": "ORDER BY"
    },
    {
      "id": 131,
      "topic": "SQL",
      "question": "Which SQL statement is used to create a new database?",
      "options": [
        "CREATE DATABASE",
        "NEW DATABASE",
        "ADD DATABASE",
        "MAKE DATABASE"
      ],
      "correctAnswer": "CREATE DATABASE"
    },
    {
      "id": 132,
      "topic": "SQL",
      "question": "Which SQL clause is used to group rows that have the same values?",
      "options": [
        "GROUP BY",
        "ORDER BY",
        "SORT BY",
        "GROUP TOGETHER"
      ],
      "correctAnswer": "GROUP BY"
    },
    {
      "id": 133,
      "topic": "SQL",
      "question": "Which SQL function is used to count the number of rows?",
      "options": [
        "TOTAL()",
        "SUM()",
        "COUNT()",
        "NUMBER()"
      ],
      "correctAnswer": "COUNT()"
    },
    {
      "id": 134,
      "topic": "SQL",
      "question": "Which SQL function is used to calculate the average value of a column?",
      "options": [
        "AVERAGE()",
        "MEAN()",
        "AVG()",
        "MID()"
      ],
      "correctAnswer": "AVG()"
    },
    {
      "id": 135,
      "topic": "SQL",
      "question": "Which SQL function is used to return the largest value?",
      "options": [
        "MAX()",
        "LARGE()",
        "GREATEST()",
        "HIGH()"
      ],
      "correctAnswer": "MAX()"
    },
    {
      "id": 136,
      "topic": "SQL",
      "question": "Which SQL function is used to return the smallest value?",
      "options": [
        "MIN()",
        "SMALL()",
        "LEAST()",
        "LOW()"
      ],
      "correctAnswer": "MIN()"
    },
    {
      "id": 137,
      "topic": "SQL",
      "question": "Which SQL statement is used to create an index on a table?",
      "options": [
        "CREATE INDEX",
        "MAKE INDEX",
        "ADD INDEX",
        "NEW INDEX"
      ],
      "correctAnswer": "CREATE INDEX"
    },
    {
      "id": 138,
      "topic": "SQL",
      "question": "Which SQL statement is used to remove an index from a table?",
      "options": [
        "REMOVE INDEX",
        "DELETE INDEX",
        "DROP INDEX",
        "ERASE INDEX"
      ],
      "correctAnswer": "DROP INDEX"
    },
    {
      "id": 139,
      "topic": "SQL",
      "question": "Which SQL statement is used to change the structure of a table?",
      "options": [
        "ALTER TABLE",
        "CHANGE TABLE",
        "MODIFY TABLE",
        "UPDATE TABLE"
      ],
      "correctAnswer": "ALTER TABLE"
    },
    {
      "id": 140,
      "topic": "SQL",
      "question": "Which SQL clause is used to filter records based on aggregate functions?",
      "options": [
        "HAVING",
        "WHERE",
        "GROUP BY",
        "FILTER"
      ],
      "correctAnswer": "HAVING"
    },
    {
      "id": 141,
      "topic": "SQL",
      "question": "Which SQL keyword is used to retrieve distinct values?",
      "options": [
        "DIFFERENT",
        "UNIQUE",
        "DISTINCT",
        "SPECIAL"
      ],
      "correctAnswer": "DISTINCT"
    },
    {
      "id": 142,
      "topic": "SQL",
      "question": "Which SQL statement is used to add a column to an existing table?",
      "options": [
        "ADD COLUMN",
        "NEW COLUMN",
        "INSERT COLUMN",
        "ALTER TABLE ADD"
      ],
      "correctAnswer": "ALTER TABLE ADD"
    },
    {
      "id": 143,
      "topic": "SQL",
      "question": "Which SQL statement is used to remove a column from an existing table?",
      "options": [
        "REMOVE COLUMN",
        "DELETE COLUMN",
        "DROP COLUMN",
        "ALTER TABLE DROP"
      ],
      "correctAnswer": "ALTER TABLE DROP"
    },
    {
      "id": 144,
      "topic": "SQL",
      "question": "Which SQL function returns the current date and time?",
      "options": [
        "NOW()",
        "CURDATE()",
        "CURRENT_DATE()",
        "TODAY()"
      ],
      "correctAnswer": "NOW()"
    },
    {
      "id": 145,
      "topic": "SQL",
      "question": "Which SQL statement is used to add a constraint to a table?",
      "options": [
        "ADD CONSTRAINT",
        "NEW CONSTRAINT",
        "INSERT CONSTRAINT",
        "ALTER TABLE ADD CONSTRAINT"
      ],
      "correctAnswer": "ALTER TABLE ADD CONSTRAINT"
    },
    {
      "id": 146,
      "topic": "SQL",
      "question": "Which SQL statement is used to remove a constraint from a table?",
      "options": [
        "REMOVE CONSTRAINT",
        "DELETE CONSTRAINT",
        "DROP CONSTRAINT",
        "ALTER TABLE DROP CONSTRAINT"
      ],
      "correctAnswer": "ALTER TABLE DROP CONSTRAINT"
    },
    {
      "id": 147,
      "topic": "SQL",
      "question": "Which SQL clause is used to combine rows from two or more tables, based on a related column?",
      "options": [
        "JOIN",
        "COMBINE",
        "UNITE",
        "LINK"
      ],
      "correctAnswer": "JOIN"
    },
    {
      "id": 148,
      "topic": "SQL",
      "question": "Which SQL clause is used to limit the number of rows returned by a query?",
      "options": [
        "LIMIT",
        "ROWNUM",
        "TOP",
        "MAX"
      ],
      "correctAnswer": "LIMIT"
    },
    {
      "id": 149,
      "topic": "SQL",
      "question": "Which SQL statement is used to rename a table?",
      "options": [
        "RENAME TABLE",
        "ALTER TABLE RENAME",
        "CHANGE TABLE NAME",
        "MODIFY TABLE NAME"
      ],
      "correctAnswer": "ALTER TABLE RENAME"
    },
    {
      "id": 150,
      "topic": "SQL",
      "question": "Which SQL keyword is used to create a unique constraint on a column?",
      "options": [
        "UNIQUE",
        "DISTINCT",
        "UNIQUE CONSTRAINT",
        "UNIQUE KEY"
      ],
      "correctAnswer": "UNIQUE"
    },
    {
      "id": 151,
      "topic": "SQL",
      "question": "Which SQL keyword is used to set a default value for a column?",
      "options": [
        "DEFAULT",
        "SET DEFAULT",
        "DEFAULT VALUE",
        "SET VALUE"
      ],
      "correctAnswer": "DEFAULT"
    },
    {
      "id": 152,
      "topic": "SQL",
      "question": "Which SQL statement is used to grant permissions to a user?",
      "options": [
        "GRANT",
        "ALLOW",
        "PERMIT",
        "GIVE"
      ],
      "correctAnswer": "GRANT"
    },
    {
      "id": 153,
      "topic": "SQL",
      "question": "Which SQL statement is used to revoke permissions from a user?",
      "options": [
        "REVOKE",
        "REMOVE",
        "DENY",
        "TAKE"
      ],
      "correctAnswer": "REVOKE"
    },
    {
      "id": 154,
      "topic": "SQL",
      "question": "Which SQL keyword is used to create an alias for a column or a table?",
      "options": [
        "AS",
        "ALIAS",
        "RENAME",
        "SET"
      ],
      "correctAnswer": "AS"
    },
    {
      "id": 155,
      "topic": "SQL",
      "question": "Which SQL statement is used to create a view?",
      "options": [
        "CREATE VIEW",
        "NEW VIEW",
        "ADD VIEW",
        "MAKE VIEW"
      ],
      "correctAnswer": "CREATE VIEW"
    },
    {
      "id": 156,
      "topic": "SQL",
      "question": "Which SQL statement is used to remove a view?",
      "options": [
        "REMOVE VIEW",
        "DELETE VIEW",
        "DROP VIEW",
        "ERASE VIEW"
      ],
      "correctAnswer": "DROP VIEW"
    },
    {
      "id": 157,
      "topic": "SQL",
      "question": "Which SQL keyword is used to join tables and include all rows from both tables, even if there are no matches?",
      "options": [
        "FULL JOIN",
        "INNER JOIN",
        "LEFT JOIN",
        "RIGHT JOIN"
      ],
      "correctAnswer": "FULL JOIN"
    },
    {
      "id": 158,
      "topic": "SQL",
      "question": "Which SQL function is used to add two or more values together?",
      "options": [
        "SUM()",
        "TOTAL()",
        "ADD()",
        "COMBINE()"
      ],
      "correctAnswer": "SUM()"
    },
    {
      "id": 159,
      "topic": "SQL",
      "question": "Which SQL keyword is used to retrieve records that match a specified pattern?",
      "options": [
        "LIKE",
        "MATCH",
        "PATTERN",
        "SIMILAR"
      ],
      "correctAnswer": "LIKE"
    },
    {
      "id": 160,
      "topic": "SQL",
      "question": "Which SQL statement is used to create a stored procedure?",
      "options": [
        "CREATE PROCEDURE",
        "NEW PROCEDURE",
        "ADD PROCEDURE",
        "MAKE PROCEDURE"
      ],
      "correctAnswer": "CREATE PROCEDURE"
    }
  ]
}
