-- Use the existing database
USE Quizz_app;

-- Drop existing tables if they exist (excluding existing ones in your script)
DROP TABLE IF EXISTS StudentAnswers;
DROP TABLE IF EXISTS Answers;
DROP TABLE IF EXISTS Questions;
DROP TABLE IF EXISTS Statistics;
DROP TABLE IF EXISTS Games;
DROP TABLE IF EXISTS Connections;
DROP TABLE IF EXISTS Students;
DROP TABLE IF EXISTS Tokens;
DROP TABLE IF EXISTS Sections;
DROP TABLE IF EXISTS Teachers;
DROP TABLE IF EXISTS Topics;

-- Create the Teachers table
CREATE TABLE Teachers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    email VARCHAR(100) UNIQUE,
    password VARCHAR(100),
    isConfirmed BOOLEAN DEFAULT FALSE
);

-- Create the Topics table
CREATE TABLE IF NOT EXISTS Topics (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) NOT NULL
);

-- Insert topics into the Topics table
INSERT INTO Topics (id, name) VALUES
(1, 'JavaScript'),
(2, 'SQL'),
(3, 'React.js'),
(4, 'Node.js');

-- Create the Sections table
CREATE TABLE Sections (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    teacher_id INT,
    FOREIGN KEY (teacher_id) REFERENCES Teachers(id)
);

-- Create the Tokens table
CREATE TABLE Tokens (
    id INT AUTO_INCREMENT PRIMARY KEY,
    token VARCHAR(100) UNIQUE,
    section_id INT,
    active BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (section_id) REFERENCES Sections(id)
);

-- Create the Students table
CREATE TABLE Students (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    username VARCHAR(100) NOT NULL
);

-- Create the Connections table
CREATE TABLE Connections (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    token_id INT,
    FOREIGN KEY (student_id) REFERENCES Students(id),
    FOREIGN KEY (token_id) REFERENCES Tokens(id)
);

-- Create the Games table
CREATE TABLE Games (
    id INT AUTO_INCREMENT PRIMARY KEY,
    section_id INT,
    start_time DATETIME,
    duration INT, -- Duration in minutes
    FOREIGN KEY (section_id) REFERENCES Sections(id)
);

-- Create the Questions table with topic_id
CREATE TABLE IF NOT EXISTS Questions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    statement TEXT NOT NULL,
    topic_id INT,
    FOREIGN KEY (topic_id) REFERENCES Topics(id)
);

-- Create the Answers table
CREATE TABLE Answers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    answer TEXT NOT NULL,
    is_correct BOOLEAN,
    question_id INT,
    FOREIGN KEY (question_id) REFERENCES Questions(id)
);

-- Create the StudentAnswers table
CREATE TABLE StudentAnswers (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT,
    answer_id INT,
    FOREIGN KEY (student_id) REFERENCES Students(id),
    FOREIGN KEY (answer_id) REFERENCES Answers(id)
);

-- Create the Statistics table
CREATE TABLE Statistics (
    id INT AUTO_INCREMENT PRIMARY KEY,
    game_id INT,
    student_id INT,
    score INT,
    FOREIGN KEY (game_id) REFERENCES Games(id),
    FOREIGN KEY (student_id) REFERENCES Students(id)
);


-- Insert Questions and Answers
-- JavaScript Questions and Answers
INSERT INTO Questions (id, statement, topic_id) VALUES
(1, 'What is JavaScript?', 1),
(2, 'Which company developed JavaScript?', 1),
(3, 'What is a closure in JavaScript?', 1),
(4, 'What is the use of the "this" keyword in JavaScript?', 1),
(5, 'What is an IIFE in JavaScript?', 1),
(6, 'What is the difference between == and === in JavaScript?', 1),
(7, 'What is the purpose of the Array.prototype.map method?', 1),
(8, 'What is NaN in JavaScript?', 1),
(9, 'What is the purpose of the JSON.stringify method?', 1),
(10, 'What is the use of the setTimeout function?', 1),
(11, 'What does "use strict" do in JavaScript?', 1),
(12, 'What is the purpose of the Array.prototype.filter method?', 1),
(13, 'What is the difference between null and undefined?', 1),
(14, 'What is the use of the bind method in JavaScript?', 1),
(15, 'What is the purpose of the typeof operator?', 1),
(16, 'What is an event loop in JavaScript?', 1),
(17, 'What is the purpose of the Array.prototype.reduce method?', 1),
(18, 'What is the use of the call method in JavaScript?', 1),
(19, 'What is the purpose of the apply method in JavaScript?', 1),
(20, 'What is the use of the Function.prototype.bind method?', 1),
(21, 'What is the purpose of the Promise constructor?', 1),
(22, 'What is the use of the async/await syntax?', 1),
(23, 'What is the purpose of the fetch API?', 1),
(24, 'What is the use of the localStorage object?', 1),
(25, 'What is the purpose of the sessionStorage object?', 1),
(26, 'What is the difference between let and var in JavaScript?', 1),
(27, 'What is the use of the const keyword in JavaScript?', 1),
(28, 'What is the purpose of the Symbol type in JavaScript?', 1),
(29, 'What is the use of the spread operator in JavaScript?', 1),
(30, 'What is the purpose of the rest operator in JavaScript?', 1),
(31, 'What is the use of the Array.prototype.find method?', 1),
(32, 'What is the purpose of the Array.prototype.every method?', 1),
(33, 'What is the use of the Array.prototype.some method?', 1),
(34, 'What is the purpose of the Array.prototype.includes method?', 1),
(35, 'What is the use of the String.prototype.includes method?', 1),
(36, 'What is the purpose of the Object.assign method?', 1),
(37, 'What is the use of the Object.keys method?', 1),
(38, 'What is the purpose of the Object.values method?', 1),
(39, 'What is the use of the Object.entries method?', 1),
(40, 'What is the purpose of the Object.create method?', 1);

INSERT INTO Answers (id, answer, is_correct, question_id) VALUES
(1, 'A programming language', TRUE, 1),
(2, 'A database', FALSE, 1),
(3, 'An operating system', FALSE, 1),
(4, 'A web server', FALSE, 1),
(5, 'Microsoft', FALSE, 2),
(6, 'Google', FALSE, 2),
(7, 'Netscape', TRUE, 2),
(8, 'Apple', FALSE, 2),
(9, 'A feature that allows a function to access variables from an enclosing scope', TRUE, 3),
(10, 'A way to close a browser window using JavaScript', FALSE, 3),
(11, 'A function that executes immediately after creation', FALSE, 3),
(12, 'A method to iterate over objects', FALSE, 3),
(13, 'Refers to the object it belongs to', TRUE, 4),
(14, 'Refers to the previous function', FALSE, 4),
(15, 'Refers to the global object', FALSE, 4),
(16, 'Refers to the current function', FALSE, 4),
(17, 'Immediately Invoked Function Expression', TRUE, 5),
(18, 'A function that returns another function', FALSE, 5),
(19, 'A function that takes another function as an argument', FALSE, 5),
(20, 'A function that is assigned to a variable', FALSE, 5),
(21, '== compares values, === compares values and types', TRUE, 6),
(22, '== compares types, === compares values', FALSE, 6),
(23, '== compares references, === compares values', FALSE, 6),
(24, '== compares objects, === compares arrays', FALSE, 6),
(25, 'To create a new array with the results of calling a provided function on every element', TRUE, 7),
(26, 'To filter elements in an array', FALSE, 7),
(27, 'To reduce an array to a single value', FALSE, 7),
(28, 'To find an element in an array', FALSE, 7),
(29, 'Not-a-Number', TRUE, 8),
(30, 'Not-a-Null', FALSE, 8),
(31, 'Not-a-Node', FALSE, 8),
(32, 'Not-a-Notation', FALSE, 8),
(33, 'To convert a JavaScript object into a JSON string', TRUE, 9),
(34, 'To convert a JSON string into a JavaScript object', FALSE, 9),
(35, 'To parse a JSON string', FALSE, 9),
(36, 'To filter elements in a JSON string', FALSE, 9),
(37, 'To execute a function after a specified delay', TRUE, 10),
(38, 'To execute a function immediately', FALSE, 10),
(39, 'To create a loop', FALSE, 10),
(40, 'To handle exceptions', FALSE, 10),
(41, 'Enables strict mode in JavaScript', TRUE, 11),
(42, 'Disables strict mode in JavaScript', FALSE, 11),
(43, 'Creates a new variable', FALSE, 11),
(44, 'Creates a new function', FALSE, 11),
(45, 'To create a new array with all elements that pass the test implemented by the provided function', TRUE, 12),
(46, 'To find an element in an array', FALSE, 12),
(47, 'To reduce an array to a single value', FALSE, 12),
(48, 'To map elements in an array', FALSE, 12),
(49, 'null represents the absence of value, undefined represents an uninitialized variable', TRUE, 13),
(50, 'null represents an uninitialized variable, undefined represents the absence of value', FALSE, 13),
(51, 'null and undefined are the same', FALSE, 13),
(52, 'null and undefined cannot be compared', FALSE, 13),
(53, 'To create a new function with a specified this value and arguments', TRUE, 14),
(54, 'To create a new array', FALSE, 14),
(55, 'To create a new object', FALSE, 14),
(56, 'To create a new variable', FALSE, 14),
(57, 'To determine the type of a variable', TRUE, 15),
(58, 'To determine the value of a variable', FALSE, 15),
(59, 'To determine the scope of a variable', FALSE, 15),
(60, 'To determine the name of a variable', FALSE, 15),
(61, 'A mechanism that handles asynchronous callbacks', TRUE, 16),
(62, 'A mechanism that handles synchronous callbacks', FALSE, 16),
(63, 'A mechanism that handles events in the DOM', FALSE, 16),
(64, 'A mechanism that handles HTTP requests', FALSE, 16),
(65, 'To apply a function against an accumulator and each element in the array to reduce it to a single value', TRUE, 17),
(66, 'To create a new array with the results of calling a provided function on every element', FALSE, 17),
(67, 'To filter elements in an array', FALSE, 17),
(68, 'To find an element in an array', FALSE, 17),
(69, 'To call a function with a specified this value and arguments', TRUE, 18),
(70, 'To call a function without arguments', FALSE, 18),
(71, 'To call a function with a specified return value', FALSE, 18),
(72, 'To call a function with a specified scope', FALSE, 18),
(73, 'To call a function with a specified this value and arguments provided as an array', TRUE, 19),
(74, 'To call a function with a specified this value and arguments provided as a string', FALSE, 19),
(75, 'To call a function without arguments', FALSE, 19),
(76, 'To call a function with a specified return value', FALSE, 19),
(77, 'To create a new function with a specified this value and arguments', TRUE, 20),
(78, 'To create a new array', FALSE, 20),
(79, 'To create a new object', FALSE, 20),
(80, 'To create a new variable', FALSE, 20);

-- SQL Questions and Answers
INSERT INTO Questions (id, statement, topic_id) VALUES
(41, 'What does SQL stand for?', 2),
(42, 'Which SQL statement is used to extract data from a database?', 2),
(43, 'What is a primary key in SQL?', 2),
(44, 'What is the purpose of the SQL SELECT statement?', 2),
(45, 'What is a foreign key in SQL?', 2),
(46, 'Which SQL statement is used to update data in a database?', 2),
(47, 'Which SQL statement is used to delete data from a database?', 2),
(48, 'Which SQL statement is used to insert new data into a database?', 2),
(49, 'What is the purpose of the SQL WHERE clause?', 2),
(50, 'What is the purpose of the SQL ORDER BY clause?', 2),
(51, 'Which SQL function is used to count the number of rows?', 2),
(52, 'Which SQL function is used to calculate the average value of a column?', 2),
(53, 'Which SQL function is used to return the largest value?', 2),
(54, 'Which SQL function is used to return the smallest value?', 2),
(55, 'Which SQL keyword is used to retrieve distinct values?', 2),
(56, 'Which SQL statement is used to create a new table?', 2),
(57, 'Which SQL statement is used to create a new database?', 2),
(58, 'Which SQL statement is used to add a column to an existing table?', 2),
(59, 'Which SQL statement is used to remove a column from an existing table?', 2),
(60, 'Which SQL statement is used to create an index on a table?', 2),
(61, 'Which SQL statement is used to remove an index from a table?', 2),
(62, 'Which SQL clause is used to filter records based on aggregate functions?', 2),
(63, 'Which SQL statement is used to create a view?', 2),
(64, 'Which SQL statement is used to remove a view?', 2),
(65, 'Which SQL clause is used to combine rows from two or more tables, based on a related column?', 2),
(66, 'Which SQL clause is used to limit the number of rows returned by a query?', 2),
(67, 'Which SQL statement is used to rename a table?', 2),
(68, 'Which SQL keyword is used to create a unique constraint on a column?', 2),
(69, 'Which SQL keyword is used to set a default value for a column?', 2),
(70, 'Which SQL statement is used to grant permissions to a user?', 2),
(71, 'Which SQL statement is used to revoke permissions from a user?', 2),
(72, 'Which SQL keyword is used to create an alias for a column or a table?', 2),
(73, 'Which SQL function is used to add two or more values together?', 2),
(74, 'Which SQL keyword is used to retrieve records that match a specified pattern?', 2),
(75, 'Which SQL statement is used to create a stored procedure?', 2),
(76, 'Which SQL statement is used to remove a stored procedure?', 2),
(77, 'Which SQL statement is used to create a trigger?', 2),
(78, 'Which SQL statement is used to remove a trigger?', 2),
(79, 'Which SQL function is used to calculate the sum of a column?', 2),
(80, 'Which SQL function is used to return the current date and time?', 2);

INSERT INTO Answers (id, answer, is_correct, question_id) VALUES
(81, 'Structured Query Language', TRUE, 41),
(82, 'Structured Question Language', FALSE, 41),
(83, 'Simple Query Language', FALSE, 41),
(84, 'Structured Quotation Language', FALSE, 41),
(85, 'UPDATE', FALSE, 42),
(86, 'INSERT', FALSE, 42),
(87, 'SELECT', TRUE, 42),
(88, 'DELETE', FALSE, 42),
(89, 'A unique identifier for a record', TRUE, 43),
(90, 'A field that can have duplicate values', FALSE, 43),
(91, 'A way to execute multiple queries', FALSE, 43),
(92, 'A method to sort data', FALSE, 43),
(93, 'To retrieve data from a database', TRUE, 44),
(94, 'To update data in a database', FALSE, 44),
(95, 'To delete data from a database', FALSE, 44),
(96, 'To create a new database', FALSE, 44),
(97, 'A field in one table that refers to the primary key in another table', TRUE, 45),
(98, 'A field that has unique values', FALSE, 45),
(99, 'A field that cannot be NULL', FALSE, 45),
(100, 'A field that is used for indexing', FALSE, 45),
(101, 'UPDATE', TRUE, 46),
(102, 'INSERT', FALSE, 46),
(103, 'DELETE', FALSE, 46),
(104, 'SELECT', FALSE, 46),
(105, 'DELETE', TRUE, 47),
(106, 'UPDATE', FALSE, 47),
(107, 'INSERT', FALSE, 47),
(108, 'SELECT', FALSE, 47),
(109, 'INSERT', TRUE, 48),
(110, 'UPDATE', FALSE, 48),
(111, 'DELETE', FALSE, 48),
(112, 'SELECT', FALSE, 48),
(113, 'To filter records', TRUE, 49),
(114, 'To sort records', FALSE, 49),
(115, 'To join tables', FALSE, 49),
(116, 'To group records', FALSE, 49),
(117, 'To sort records', TRUE, 50),
(118, 'To filter records', FALSE, 50),
(119, 'To join tables', FALSE, 50),
(120, 'To group records', FALSE, 50),
(121, 'COUNT', TRUE, 51),
(122, 'SUM', FALSE, 51),
(123, 'AVG', FALSE, 51),
(124, 'MAX', FALSE, 51),
(125, 'AVG', TRUE, 52),
(126, 'SUM', FALSE, 52),
(127, 'COUNT', FALSE, 52),
(128, 'MAX', FALSE, 52),
(129, 'MAX', TRUE, 53),
(130, 'SUM', FALSE, 53),
(131, 'COUNT', FALSE, 53),
(132, 'AVG', FALSE, 53),
(133, 'MIN', TRUE, 54),
(134, 'SUM', FALSE, 54),
(135, 'COUNT', FALSE, 54),
(136, 'AVG', FALSE, 54),
(137, 'DISTINCT', TRUE, 55),
(138, 'UNIQUE', FALSE, 55),
(139, 'PRIMARY', FALSE, 55),
(140, 'INDEX', FALSE, 55),
(141, 'CREATE TABLE', TRUE, 56),
(142, 'CREATE DATABASE', FALSE, 56),
(143, 'CREATE INDEX', FALSE, 56),
(144, 'CREATE VIEW', FALSE, 56),
(145, 'CREATE DATABASE', TRUE, 57),
(146, 'CREATE TABLE', FALSE, 57),
(147, 'CREATE INDEX', FALSE, 57),
(148, 'CREATE VIEW', FALSE, 57),
(149, 'ADD COLUMN', TRUE, 58),
(150, 'DROP COLUMN', FALSE, 58),
(151, 'ALTER COLUMN', FALSE, 58),
(152, 'RENAME COLUMN', FALSE, 58),
(153, 'DROP COLUMN', TRUE, 59),
(154, 'ADD COLUMN', FALSE, 59),
(155, 'ALTER COLUMN', FALSE, 59),
(156, 'RENAME COLUMN', FALSE, 59),
(157, 'CREATE INDEX', TRUE, 60),
(158, 'CREATE TABLE', FALSE, 60),
(159, 'CREATE DATABASE', FALSE, 60),
(160, 'CREATE VIEW', FALSE, 60),
(161, 'DROP INDEX', TRUE, 61),
(162, 'DROP TABLE', FALSE, 61),
(163, 'DROP DATABASE', FALSE, 61),
(164, 'DROP VIEW', FALSE, 61),
(165, 'HAVING', TRUE, 62),
(166, 'WHERE', FALSE, 62),
(167, 'JOIN', FALSE, 62),
(168, 'GROUP BY', FALSE, 62),
(169, 'CREATE VIEW', TRUE, 63),
(170, 'CREATE TABLE', FALSE, 63),
(171, 'CREATE DATABASE', FALSE, 63),
(172, 'CREATE INDEX', FALSE, 63),
(173, 'DROP VIEW', TRUE, 64),
(174, 'DROP TABLE', FALSE, 64),
(175, 'DROP DATABASE', FALSE, 64),
(176, 'DROP INDEX', FALSE, 64),
(177, 'JOIN', TRUE, 65),
(178, 'WHERE', FALSE, 65),
(179, 'ORDER BY', FALSE, 65),
(180, 'GROUP BY', FALSE, 65),
(181, 'LIMIT', TRUE, 66),
(182, 'ORDER BY', FALSE, 66),
(183, 'GROUP BY', FALSE, 66),
(184, 'HAVING', FALSE, 66),
(185, 'RENAME TABLE', TRUE, 67),
(186, 'RENAME COLUMN', FALSE, 67),
(187, 'RENAME DATABASE', FALSE, 67),
(188, 'RENAME INDEX', FALSE, 67),
(189, 'UNIQUE', TRUE, 68),
(190, 'PRIMARY', FALSE, 68),
(191, 'INDEX', FALSE, 68),
(192, 'FOREIGN', FALSE, 68),
(193, 'DEFAULT', TRUE, 69),
(194, 'PRIMARY', FALSE, 69),
(195, 'INDEX', FALSE, 69),
(196, 'FOREIGN', FALSE, 69),
(197, 'GRANT', TRUE, 70),
(198, 'REVOKE', FALSE, 70),
(199, 'DENY', FALSE, 70),
(200, 'ALLOW', FALSE, 70),
(201, 'REVOKE', TRUE, 71),
(202, 'GRANT', FALSE, 71),
(203, 'DENY', FALSE, 71),
(204, 'ALLOW', FALSE, 71),
(205, 'AS', TRUE, 72),
(206, 'IS', FALSE, 72),
(207, 'LIKE', FALSE, 72),
(208, 'WITH', FALSE, 72),
(209, 'SUM', TRUE, 73),
(210, 'AVG', FALSE, 73),
(211, 'COUNT', FALSE, 73),
(212, 'MAX', FALSE, 73),
(213, 'LIKE', TRUE, 74),
(214, 'IN', FALSE, 74),
(215, 'BETWEEN', FALSE, 74),
(216, 'NOT', FALSE, 74),
(217, 'CREATE PROCEDURE', TRUE, 75),
(218, 'CREATE FUNCTION', FALSE, 75),
(219, 'CREATE TRIGGER', FALSE, 75),
(220, 'CREATE INDEX', FALSE, 75),
(221, 'DROP PROCEDURE', TRUE, 76),
(222, 'DROP FUNCTION', FALSE, 76),
(223, 'DROP TRIGGER', FALSE, 76),
(224, 'DROP INDEX', FALSE, 76),
(225, 'CREATE TRIGGER', TRUE, 77),
(226, 'CREATE PROCEDURE', FALSE, 77),
(227, 'CREATE FUNCTION', FALSE, 77),
(228, 'CREATE INDEX', FALSE, 77),
(229, 'DROP TRIGGER', TRUE, 78),
(230, 'DROP PROCEDURE', FALSE, 78),
(231, 'DROP FUNCTION', FALSE, 78),
(232, 'DROP INDEX', FALSE, 78),
(233, 'SUM', TRUE, 79),
(234, 'AVG', FALSE, 79),
(235, 'COUNT', FALSE, 79),
(236, 'MAX', FALSE, 79),
(237, 'NOW', TRUE, 80),
(238, 'TODAY', FALSE, 80),
(239, 'CURRENT', FALSE, 80),
(240, 'GETDATE', FALSE, 80);

-- React.js Questions and Answers
INSERT INTO Questions (id, statement, topic_id) VALUES
(81, 'What is React?', 3),
(82, 'Who developed React?', 3),
(83, 'What is a React component?', 3),
(84, 'What is JSX in React?', 3),
(85, 'What is the virtual DOM in React?', 3),
(86, 'What is a React hook?', 3),
(87, 'What is the use of the useState hook?', 3),
(88, 'What is the use of the useEffect hook?', 3),
(89, 'What is the purpose of the useContext hook?', 3),
(90, 'What is the purpose of the useReducer hook?', 3),
(91, 'What is the purpose of the useMemo hook?', 3),
(92, 'What is the purpose of the useCallback hook?', 3),
(93, 'What is the use of the React Router library?', 3),
(94, 'What is the purpose of the React.Fragment component?', 3),
(95, 'What is the purpose of the React.PureComponent class?', 3),
(96, 'What is the purpose of the React.memo function?', 3),
(97, 'What is the use of the PropTypes library?', 3),
(98, 'What is the use of the Context API?', 3),
(99, 'What is the use of the React.Children utility?', 3),
(100, 'What is the use of the ReactDOM.render method?', 3),
(101, 'What is the use of the ReactDOM.hydrate method?', 3),
(102, 'What is the use of the ReactDOM.createPortal method?', 3),
(103, 'What is the use of the ReactDOM.unmountComponentAtNode method?', 3),
(104, 'What is the purpose of the React.StrictMode component?', 3),
(105, 'What is the use of the React.Suspense component?', 3),
(106, 'What is the purpose of the React.lazy function?', 3),
(107, 'What is the use of the error boundaries in React?', 3),
(108, 'What is the purpose of the React.forwardRef function?', 3),
(109, 'What is the use of the React.cloneElement method?', 3),
(110, 'What is the purpose of the React.createContext method?', 3),
(111, 'What is the use of the React.createRef method?', 3),
(112, 'What is the use of the React.forwardRef function?', 3),
(113, 'What is the purpose of the React.memo function?', 3),
(114, 'What is the use of the PropTypes library?', 3),
(115, 'What is the use of the Context API?', 3),
(116, 'What is the use of the React.Children utility?', 3),
(117, 'What is the use of the ReactDOM.render method?', 3),
(118, 'What is the use of the ReactDOM.hydrate method?', 3),
(119, 'What is the use of the ReactDOM.createPortal method?', 3),
(120, 'What is the use of the ReactDOM.unmountComponentAtNode method?', 3);

INSERT INTO Answers (id, answer, is_correct, question_id) VALUES
(241, 'A JavaScript library for building user interfaces', TRUE, 81),
(242, 'A database', FALSE, 81),
(243, 'A web server', FALSE, 81),
(244, 'An operating system', FALSE, 81),
(245, 'Google', FALSE, 82),
(246, 'Facebook', TRUE, 82),
(247, 'Microsoft', FALSE, 82),
(248, 'Apple', FALSE, 82),
(249, 'A reusable piece of UI', TRUE, 83),
(250, 'A JavaScript function', FALSE, 83),
(251, 'An HTML element', FALSE, 83),
(252, 'A CSS style', FALSE, 83),
(253, 'A syntax extension for JavaScript', TRUE, 84),
(254, 'A database query language', FALSE, 84),
(255, 'A type of web server', FALSE, 84),
(256, 'A method to handle CSS', FALSE, 84),
(257, 'A lightweight representation of the actual DOM', TRUE, 85),
(258, 'A heavy representation of the actual DOM', FALSE, 85),
(259, 'A way to directly manipulate the actual DOM', FALSE, 85),
(260, 'A new type of web browser', FALSE, 85),
(261, 'A special function that lets you use state and other React features', TRUE, 86),
(262, 'A function that runs when a component mounts', FALSE, 86),
(263, 'A way to handle CSS in React', FALSE, 86),
(264, 'A method to create a new component', FALSE, 86),
(265, 'To declare a state variable and a function to update it', TRUE, 87),
(266, 'To perform side effects in functional components', FALSE, 87),
(267, 'To create a new context', FALSE, 87),
(268, 'To handle form submissions', FALSE, 87),
(269, 'To perform side effects in functional components', TRUE, 88),
(270, 'To declare a state variable and a function to update it', FALSE, 88),
(271, 'To create a new context', FALSE, 88),
(272, 'To handle form submissions', FALSE, 88),
(273, 'To share state between components', TRUE, 89),
(274, 'To create a new component', FALSE, 89),
(275, 'To handle form submissions', FALSE, 89),
(276, 'To create a new context', FALSE, 89),
(277, 'To manage complex state logic', TRUE, 90),
(278, 'To handle form submissions', FALSE, 90),
(279, 'To create a new context', FALSE, 90),
(280, 'To declare a state variable and a function to update it', FALSE, 90),
(281, 'To optimize performance by memoizing expensive calculations', TRUE, 91),
(282, 'To handle form submissions', FALSE, 91),
(283, 'To create a new context', FALSE, 91),
(284, 'To declare a state variable and a function to update it', FALSE, 91),
(285, 'To optimize performance by memoizing functions', TRUE, 92),
(286, 'To handle form submissions', FALSE, 92),
(287, 'To create a new context', FALSE, 92),
(288, 'To declare a state variable and a function to update it', FALSE, 92),
(289, 'To handle routing in React applications', TRUE, 93),
(290, 'To create a new context', FALSE, 93),
(291, 'To declare a state variable and a function to update it', FALSE, 93),
(292, 'To handle form submissions', FALSE, 93),
(293, 'To return multiple elements without adding extra nodes to the DOM', TRUE, 94),
(294, 'To create a new context', FALSE, 94),
(295, 'To declare a state variable and a function to update it', FALSE, 94),
(296, 'To handle form submissions', FALSE, 94),
(297, 'To prevent unnecessary re-renders', TRUE, 95),
(298, 'To handle form submissions', FALSE, 95),
(299, 'To create a new context', FALSE, 95),
(300, 'To declare a state variable and a function to update it', FALSE, 95),
(301, 'To prevent unnecessary re-renders', TRUE, 96),
(302, 'To handle form submissions', FALSE, 96),
(303, 'To create a new context', FALSE, 96),
(304, 'To declare a state variable and a function to update it', FALSE, 96),
(305, 'To check types of props passed to components', TRUE, 97),
(306, 'To handle form submissions', FALSE, 97),
(307, 'To create a new context', FALSE, 97),
(308, 'To declare a state variable and a function to update it', FALSE, 97),
(309, 'To share state between components', TRUE, 98),
(310, 'To handle form submissions', FALSE, 98),
(311, 'To create a new context', FALSE, 98),
(312, 'To declare a state variable and a function to update it', FALSE, 98),
(313, 'To provide utilities for dealing with React children', TRUE, 99),
(314, 'To handle form submissions', FALSE, 99),
(315, 'To create a new context', FALSE, 99),
(316, 'To declare a state variable and a function to update it', FALSE, 99),
(317, 'To render a React element into the DOM', TRUE, 100),
(318, 'To handle form submissions', FALSE, 100),
(319, 'To create a new context', FALSE, 100),
(320, 'To declare a state variable and a function to update it', FALSE, 100),
(321, 'To hydrate a server-rendered React application', TRUE, 101),
(322, 'To handle form submissions', FALSE, 101),
(323, 'To create a new context', FALSE, 101),
(324, 'To declare a state variable and a function to update it', FALSE, 101),
(325, 'To render children into a different part of the DOM', TRUE, 102),
(326, 'To handle form submissions', FALSE, 102),
(327, 'To create a new context', FALSE, 102),
(328, 'To declare a state variable and a function to update it', FALSE, 102),
(329, 'To remove a mounted React component from the DOM', TRUE, 103),
(330, 'To handle form submissions', FALSE, 103),
(331, 'To create a new context', FALSE, 103),
(332, 'To declare a state variable and a function to update it', FALSE, 103),
(333, 'To identify components with potential problems', TRUE, 104),
(334, 'To handle form submissions', FALSE, 104),
(335, 'To create a new context', FALSE, 104),
(336, 'To declare a state variable and a function to update it', FALSE, 104),
(337, 'To handle lazy loading of components', TRUE, 105),
(338, 'To handle form submissions', FALSE, 105),
(339, 'To create a new context', FALSE, 105),
(340, 'To declare a state variable and a function to update it', FALSE, 105),
(341, 'To dynamically import components', TRUE, 106),
(342, 'To handle form submissions', FALSE, 106),
(343, 'To create a new context', FALSE, 106),
(344, 'To declare a state variable and a function to update it', FALSE, 106),
(345, 'To catch JavaScript errors anywhere in the component tree', TRUE, 107),
(346, 'To handle form submissions', FALSE, 107),
(347, 'To create a new context', FALSE, 107),
(348, 'To declare a state variable and a function to update it', FALSE, 107),
(349, 'To forward refs to child components', TRUE, 108),
(350, 'To handle form submissions', FALSE, 108),
(351, 'To create a new context', FALSE, 108),
(352, 'To declare a state variable and a function to update it', FALSE, 108),
(353, 'To clone and return a new React element using an existing element as the starting point', TRUE, 109),
(354, 'To handle form submissions', FALSE, 109),
(355, 'To create a new context', FALSE, 109),
(356, 'To declare a state variable and a function to update it', FALSE, 109),
(357, 'To create a new context', TRUE, 110),
(358, 'To handle form submissions', FALSE, 110),
(359, 'To declare a state variable and a function to update it', FALSE, 110),
(360, 'To handle CSS in React', FALSE, 110),
(361, 'To create a ref', TRUE, 111),
(362, 'To handle form submissions', FALSE, 111),
(363, 'To declare a state variable and a function to update it', FALSE, 111),
(364, 'To create a new context', FALSE, 111),
(365, 'To forward refs to child components', TRUE, 112),
(366, 'To handle form submissions', FALSE, 112),
(367, 'To declare a state variable and a function to update it', FALSE, 112),
(368, 'To create a new context', FALSE, 112),
(369, 'To prevent unnecessary re-renders', TRUE, 113),
(370, 'To handle form submissions', FALSE, 113),
(371, 'To declare a state variable and a function to update it', FALSE, 113),
(372, 'To create a new context', FALSE, 113),
(373, 'To check types of props passed to components', TRUE, 114),
(374, 'To handle form submissions', FALSE, 114),
(375, 'To declare a state variable and a function to update it', FALSE, 114),
(376, 'To create a new context', FALSE, 114),
(377, 'To share state between components', TRUE, 115),
(378, 'To handle form submissions', FALSE, 115),
(379, 'To declare a state variable and a function to update it', FALSE, 115),
(380, 'To create a new context', FALSE, 115),
(381, 'To provide utilities for dealing with React children', TRUE, 116),
(382, 'To handle form submissions', FALSE, 116),
(383, 'To declare a state variable and a function to update it', FALSE, 116),
(384, 'To create a new context', FALSE, 116),
(385, 'To render a React element into the DOM', TRUE, 117),
(386, 'To handle form submissions', FALSE, 117),
(387, 'To declare a state variable and a function to update it', FALSE, 117),
(388, 'To create a new context', FALSE, 117),
(389, 'To hydrate a server-rendered React application', TRUE, 118),
(390, 'To handle form submissions', FALSE, 118),
(391, 'To declare a state variable and a function to update it', FALSE, 118),
(392, 'To create a new context', FALSE, 118),
(393, 'To render children into a different part of the DOM', TRUE, 119),
(394, 'To handle form submissions', FALSE, 119),
(395, 'To declare a state variable and a function to update it', FALSE, 119),
(396, 'To create a new context', FALSE, 119),
(397, 'To remove a mounted React component from the DOM', TRUE, 120),
(398, 'To handle form submissions', FALSE, 120),
(399, 'To declare a state variable and a function to update it', FALSE, 120),
(400, 'To create a new context', FALSE, 120);

-- Node.js Questions and Answers
INSERT INTO Questions (id, statement, topic_id) VALUES
(121, 'What is Node.js?', 4),
(122, 'Who created Node.js?', 4),
(123, 'Which module is used to create a web server in Node.js?', 4),
(124, 'What is the default port for a Node.js application?', 4),
(125, 'What is the use of the npm init command?', 4),
(126, 'What is the purpose of the package.json file?', 4),
(127, 'What is the use of the require function?', 4),
(128, 'What is the use of the module.exports object?', 4),
(129, 'What is the use of the process object in Node.js?', 4),
(130, 'What is the purpose of the fs module?', 4),
(131, 'What is the use of the path module?', 4),
(132, 'What is the purpose of the os module?', 4),
(133, 'What is the use of the http module?', 4),
(134, 'What is the use of the querystring module?', 4),
(135, 'What is the purpose of the url module?', 4),
(136, 'What is the use of the zlib module?', 4),
(137, 'What is the purpose of the crypto module?', 4),
(138, 'What is the use of the util module?', 4),
(139, 'What is the purpose of the events module?', 4),
(140, 'What is the use of the buffer module?', 4),
(141, 'What is the purpose of the child_process module?', 4),
(142, 'What is the use of the cluster module?', 4),
(143, 'What is the purpose of the dgram module?', 4),
(144, 'What is the use of the dns module?', 4),
(145, 'What is the purpose of the domain module?', 4),
(146, 'What is the use of the inspector module?', 4),
(147, 'What is the purpose of the net module?', 4),
(148, 'What is the use of the readline module?', 4),
(149, 'What is the purpose of the repl module?', 4),
(150, 'What is the use of the stream module?', 4),
(151, 'What is the purpose of the string_decoder module?', 4),
(152, 'What is the use of the timers module?', 4),
(153, 'What is the purpose of the tls module?', 4),
(154, 'What is the use of the tty module?', 4),
(155, 'What is the purpose of the vm module?', 4),
(156, 'What is the use of the worker_threads module?', 4),
(157, 'What is the purpose of the v8 module?', 4),
(158, 'What is the use of the perf_hooks module?', 4),
(159, 'What is the purpose of the async_hooks module?', 4),
(160, 'What is the use of the http2 module?', 4);

INSERT INTO Answers (id, answer, is_correct, question_id) VALUES
(401, 'A JavaScript runtime built on Chrome\'s V8 JavaScript engine', TRUE, 121),
(402, 'A JavaScript library', FALSE, 121),
(403, 'A web browser', FALSE, 121),
(404, 'An operating system', FALSE, 121),
(405, 'Ryan Dahl', TRUE, 122),
(406, 'Brendan Eich', FALSE, 122),
(407, 'Guido van Rossum', FALSE, 122),
(408, 'James Gosling', FALSE, 122),
(409, 'http', TRUE, 123),
(410, 'fs', FALSE, 123),
(411, 'path', FALSE, 123),
(412, 'os', FALSE, 123),
(413, '3000', TRUE, 124),
(414, '80', FALSE, 124),
(415, '8080', FALSE, 124),
(416, '5000', FALSE, 124),
(417, 'To create a new package.json file', TRUE, 125),
(418, 'To install a package', FALSE, 125),
(419, 'To update a package', FALSE, 125),
(420, 'To remove a package', FALSE, 125),
(421, 'To define the properties of a Node.js project', TRUE, 126),
(422, 'To define the properties of a Node.js module', FALSE, 126),
(423, 'To define the properties of a Node.js file', FALSE, 126),
(424, 'To define the properties of a Node.js variable', FALSE, 126),
(425, 'To load a module', TRUE, 127),
(426, 'To export a module', FALSE, 127),
(427, 'To create a new module', FALSE, 127),
(428, 'To delete a module', FALSE, 127),
(429, 'To export functions or variables from a module', TRUE, 128),
(430, 'To import functions or variables into a module', FALSE, 128),
(431, 'To create a new module', FALSE, 128),
(432, 'To delete a module', FALSE, 128),
(433, 'To provide information about the current Node.js process', TRUE, 129),
(434, 'To provide information about the current Node.js module', FALSE, 129),
(435, 'To provide information about the current Node.js file', FALSE, 129),
(436, 'To provide information about the current Node.js variable', FALSE, 129),
(437, 'To handle file system operations', TRUE, 130),
(438, 'To handle HTTP requests', FALSE, 130),
(439, 'To handle path operations', FALSE, 130),
(440, 'To handle operating system operations', FALSE, 130),
(441, 'To handle path operations', TRUE, 131),
(442, 'To handle file system operations', FALSE, 131),
(443, 'To handle HTTP requests', FALSE, 131),
(444, 'To handle operating system operations', FALSE, 131),
(445, 'To handle operating system operations', TRUE, 132),
(446, 'To handle file system operations', FALSE, 132),
(447, 'To handle HTTP requests', FALSE, 132),
(448, 'To handle path operations', FALSE, 132),
(449, 'To handle HTTP requests', TRUE, 133),
(450, 'To handle file system operations', FALSE, 133),
(451, 'To handle path operations', FALSE, 133),
(452, 'To handle operating system operations', FALSE, 133),
(453, 'To parse and format URL query strings', TRUE, 134),
(454, 'To parse and format file paths', FALSE, 134),
(455, 'To parse and format HTTP requests', FALSE, 134),
(456, 'To parse and format operating system commands', FALSE, 134),
(457, 'To parse and format URLs', TRUE, 135),
(458, 'To parse and format file paths', FALSE, 135),
(459, 'To parse and format HTTP requests', FALSE, 135),
(460, 'To parse and format operating system commands', FALSE, 135),
(461, 'To compress and decompress files', TRUE, 136),
(462, 'To parse and format URLs', FALSE, 136),
(463, 'To parse and format file paths', FALSE, 136),
(464, 'To parse and format HTTP requests', FALSE, 136),
(465, 'To handle cryptographic operations', TRUE, 137),
(466, 'To handle HTTP requests', FALSE, 137),
(467, 'To handle file system operations', FALSE, 137),
(468, 'To handle path operations', FALSE, 137),
(469, 'To provide utility functions', TRUE, 138),
(470, 'To handle HTTP requests', FALSE, 138),
(471, 'To handle file system operations', FALSE, 138),
(472, 'To handle path operations', FALSE, 138),
(473, 'To handle events', TRUE, 139),
(474, 'To handle HTTP requests', FALSE, 139),
(475, 'To handle file system operations', FALSE, 139),
(476, 'To handle path operations', FALSE, 139),
(477, 'To handle binary data', TRUE, 140),
(478, 'To handle HTTP requests', FALSE, 140),
(479, 'To handle file system operations', FALSE, 140),
(480, 'To handle path operations', FALSE, 140),
(481, 'To spawn child processes', TRUE, 141),
(482, 'To handle HTTP requests', FALSE, 141),
(483, 'To handle file system operations', FALSE, 141),
(484, 'To handle path operations', FALSE, 141),
(485, 'To handle clustering of processes', TRUE, 142),
(486, 'To handle HTTP requests', FALSE, 142),
(487, 'To handle file system operations', FALSE, 142),
(488, 'To handle path operations', FALSE, 142),
(489, 'To handle UDP datagrams', TRUE, 143),
(490, 'To handle HTTP requests', FALSE, 143),
(491, 'To handle file system operations', FALSE, 143),
(492, 'To handle path operations', FALSE, 143),
(493, 'To handle DNS queries', TRUE, 144),
(494, 'To handle HTTP requests', FALSE, 144),
(495, 'To handle file system operations', FALSE, 144),
(496, 'To handle path operations', FALSE, 144),
(497, 'To handle domain-specific tasks', TRUE, 145),
(498, 'To handle HTTP requests', FALSE, 145),
(499, 'To handle file system operations', FALSE, 145),
(500, 'To handle path operations', FALSE, 145),
(501, 'To inspect the running Node.js process', TRUE, 146),
(502, 'To handle HTTP requests', FALSE, 146),
(503, 'To handle file system operations', FALSE, 146),
(504, 'To handle path operations', FALSE, 146),
(505, 'To create network servers and clients', TRUE, 147),
(506, 'To handle HTTP requests', FALSE, 147),
(507, 'To handle file system operations', FALSE, 147),
(508, 'To handle path operations', FALSE, 147),
(509, 'To read from and write to streams', TRUE, 148),
(510, 'To handle HTTP requests', FALSE, 148),
(511, 'To handle file system operations', FALSE, 148),
(512, 'To handle path operations', FALSE, 148),
(513, 'To provide a Read-Eval-Print Loop', TRUE, 149),
(514, 'To handle HTTP requests', FALSE, 149),
(515, 'To handle file system operations', FALSE, 149),
(516, 'To handle path operations', FALSE, 149),
(517, 'To handle streaming data', TRUE, 150),
(518, 'To handle HTTP requests', FALSE, 150),
(519, 'To handle file system operations', FALSE, 150),
(520, 'To handle path operations', FALSE, 150),
(521, 'To decode buffer objects', TRUE, 151),
(522, 'To handle HTTP requests', FALSE, 151),
(523, 'To handle file system operations', FALSE, 151),
(524, 'To handle path operations', FALSE, 151),
(525, 'To execute code after a set amount of time', TRUE, 152),
(526, 'To handle HTTP requests', FALSE, 152),
(527, 'To handle file system operations', FALSE, 152),
(528, 'To handle path operations', FALSE, 152),
(529, 'To provide TLS/SSL support', TRUE, 153),
(530, 'To handle HTTP requests', FALSE, 153),
(531, 'To handle file system operations', FALSE, 153),
(532, 'To handle path operations', FALSE, 153),
(533, 'To handle TTY streams', TRUE, 154),
(534, 'To handle HTTP requests', FALSE, 154),
(535, 'To handle file system operations', FALSE, 154),
(536, 'To handle path operations', FALSE, 154),
(537, 'To compile and run code within V8 virtual machine contexts', TRUE, 155),
(538, 'To handle HTTP requests', FALSE, 155),
(539, 'To handle file system operations', FALSE, 155),
(540, 'To handle path operations', FALSE, 155),
(541, 'To run JavaScript in worker threads', TRUE, 156),
(542, 'To handle HTTP requests', FALSE, 156),
(543, 'To handle file system operations', FALSE, 156),
(544, 'To handle path operations', FALSE, 156),
(545, 'To access V8-specific APIs', TRUE, 157),
(546, 'To handle HTTP requests', FALSE, 157),
(547, 'To handle file system operations', FALSE, 157),
(548, 'To handle path operations', FALSE, 157),
(549, 'To monitor performance', TRUE, 158),
(550, 'To handle HTTP requests', FALSE, 158),
(551, 'To handle file system operations', FALSE, 158),
(552, 'To handle path operations', FALSE, 158),
(553, 'To track asynchronous resources', TRUE, 159),
(554, 'To handle HTTP requests', FALSE, 159),
(555, 'To handle file system operations', FALSE, 159),
(556, 'To handle path operations', FALSE, 159),
(557, 'To provide HTTP/2 support', TRUE, 160),
(558, 'To handle HTTP requests', FALSE, 160),
(559, 'To handle file system operations', FALSE, 160),
(560, 'To handle path operations', FALSE, 160);
